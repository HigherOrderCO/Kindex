Apps.Fib.Player.new #Fib_plr_new
  (x  : U120)
  (y  : U120)
  (xp : U120)
  (hp : U120)
  (of : U120)
  // (rt : U120)
  // (sl : U120)
  (gd : U120)
  (cd : U120)
  (skills : List U120)
  : Apps.Fib.Player {
    let player = U120.new 0 0
    let player = Apps.Fib.Player.pos.change player ((val : U120) => U120.add (U120.shift_left y (U120.new 0 8)) x)
    let player = Apps.Fib.Player.xp.change  player ((val : U120) => xp)
    let player = Apps.Fib.Player.hp.change  player ((val : U120) => hp)
    let player = Apps.Fib.Player.of.change  player ((val : U120) => of)
    // let player = Apps.Fib.Player.rt.change  player ((val : U120) => rt)
    // let player = Apps.Fib.Player.sl.change  player ((val : U120) => sl)
    let player = Apps.Fib.Player.gd.change player ((x : U120) => gd)
    let player = Apps.Fib.Player.cd.change player ((x : U120) => cd)
    let func   = ((skill_id : U120) => (acc : Pair U120 U120) => (Pair.new (Apps.Fib.Player.skills.change (Pair.fst acc) (Pair.snd acc) ((x : U120) => skill_id)) (U120.add (Pair.snd acc) (U120.new 0 1))))
    let pair   = List.foldl U120 (Pair U120 U120) (Pair.new player (U120.new 0 0)) func skills
    Pair.fst pair
  }

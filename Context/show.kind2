Context.show.type (name: U60) (type: Term) (sub: Subst) (pad: U60): String
Context.show.type name type sub pad =
  Printer.text [ "- "
                 (String.pad_right (Name.show name) ' ' pad)
                 " : "
                 (String.cut (Term.show (Term.fill type sub)))
                 String.line_break
               ]

Context.show.vals (name: U60) (vals: List Term) (sub: Subst) (pad: U60): String
Context.show.vals name (List.nil t)           sub pad = String.nil
Context.show.vals name (List.cons t val vals) sub pad =
  Printer.text [ (Printer.color "2")
                 "- "
                 (String.pad_right (Name.show name) ' ' pad)
                 " = "
                 (String.cut (Term.show (Term.fill val sub)))
                 (Printer.color "0")
                 String.line_break
                 (Context.show.vals name vals sub pad)
               ]

Context.show.go (ctx: Context) (subst: Subst) (pad: U60): String
Context.show.go Context.empty                       sub pad = String.nil
Context.show.go (Context.entry name type vals rest) sub pad =
  Printer.text [ (Context.show.type name type sub pad)
                 (Context.show.vals name vals sub pad)
                 (Context.show.go rest sub pad)
               ]

Context.show (ctx: Context) (subst: Subst): String
Context.show ctx subst = Context.show.go ctx subst (Context.max_name_length ctx)
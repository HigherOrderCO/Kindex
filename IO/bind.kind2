IO.bind <a: Type> <b: Type> (io: IO a) (cont: a -> IO b) : IO b
IO.bind (IO.done      val)          next = next val
IO.bind (IO.do_input          cont) next = IO.do_input          (x => IO.bind (cont x) next)
IO.bind (IO.do_output text    cont) next = IO.do_output text    (x => IO.bind (cont x) next)
IO.bind (IO.do_load   key     cont) next = IO.do_load   key     (x => IO.bind (cont x) next)
IO.bind (IO.do_store  key val cont) next = IO.do_store  key val (x => IO.bind (cont x) next)
IO.bind (IO.do_events_post     room data    cont) next = IO.do_events_post       room data    (x => IO.bind (cont x) next)
IO.bind (IO.do_events_view     room from to cont) next = IO.do_events_view       room from to (x => IO.bind (cont x) next)
IO.bind (IO.do_events_watch    room         cont) next = IO.do_events_watch      room         (x => IO.bind (cont x) next)
IO.bind (IO.do_events_unwatch  room         cont) next = IO.do_events_unwatch    room         (x => IO.bind (cont x) next)
IO.bind (IO.do_events_save     room         cont) next = IO.do_events_save       room         (x => IO.bind (cont x) next)
IO.bind (IO.do_events_forget   room         cont) next = IO.do_events_forget     room         (x => IO.bind (cont x) next)
IO.bind (IO.do_events_get_time              cont) next = IO.do_events_get_time                (x => IO.bind (cont x) next)
IO.bind (IO.do_events_get_ping              cont) next = IO.do_events_get_ping                (x => IO.bind (cont x) next)
IO.bind (IO.do_events_start_sync            cont) next = IO.do_events_start_sync              (x => IO.bind (cont x) next)
IO.bind (IO.do_events_stop_sync             cont) next = IO.do_events_stop_sync               (x => IO.bind (cont x) next)
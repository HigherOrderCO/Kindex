use Data.String as String

String/split_last (xs: String/) (sep: String/) : Data.Pair String/ String/ {
  let segs = String/split xs sep
  let Data.Pair.new (fst=head) (snd=tail) = Data.List.pop_back segs
  let head = Data.String.intercalate sep head
  let tail = match Data.Maybe tail {
    some value => value
    none => ""
  }
  match String/ head {
    cons (head=x) (tail=xs) => Data.Pair.new (String/cons x xs) tail
    nil => Data.Pair.new tail ""
  }
}

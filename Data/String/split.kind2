use Data.String as String
use Data.List as List

String/split (str: String/) (find: String/) : List/ String/ {
  String/split.go str find "" 
}

String/split.go (str: String/) (find: String/) (last: String/) : List/ String/
String/split.go ""  find ""   = []
String/split.go ""  find last = [(String/reverse last)]
String/split.go str find last =
  let str = String/remove_prefix str find
  match Data.Either str with last find {
    left (val=str) => match String/ str {
      cons head tail => String/split.go tail find (String/cons head last)
      nil => []  // impossible case, remove_prefix didn't remove anything and string is not empty by the pattern
    }
    right (val=str) => List/cons (String/reverse last) (String/split.go str find "")
  }

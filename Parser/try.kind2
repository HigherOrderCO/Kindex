// On success, return the result
// On failure, backtrack and return none
// Never fails
Parser.try <a> (prs: Parser a) : Parser (Maybe a) {
  state => match Parser.State state {
    new =>
      let init_idx = state.index
      let state = (Parser.State.new state.left state.back state.index)
      match Parser.Result r = (prs state) {
        done => Parser.Result.done r.state (Maybe.some r.result)
        fail =>
          match Parser.State r.state {
            new =>
              let n_back    = (- r.state.index init_idx)
              let new_state = Parser.State.new r.state.left r.state.back r.state.index
              let old_state = Parser.State.backtrack n_back new_state
              Parser.Result.done old_state Maybe.none
          }
      }
  }
}
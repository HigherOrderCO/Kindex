// On success, return the result
// On failure, backtrack and return none
// Never fails
Parser.try <a> <t> (prs: Parser t a) : Parser t (Maybe a) {
  state =>
    open Parser.State state
    let init_idx = state.index
    let state = Parser.State.new state.custom state.left state.back state.index
    match Parser.Result r = (prs state) {
      done state result => Parser.Result.done state (Maybe.some result)
      fail state .. =>
        open Parser.State state
        let n_back    = (- state.index init_idx)
        let new_state = Parser.State.new state.custom state.left state.back state.index
        let old_state = Parser.State.backtrack n_back new_state
        Parser.Result.done old_state Maybe.none
    }
}
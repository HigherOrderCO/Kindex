// Automatically derived from Kind/Parser/Oper/_.type
Kind.Parser.Oper.match (x: (Kind.Parser.Oper)) -(p: (x: (Kind.Parser.Oper)) Type) (add: (p (Kind.Parser.Oper.add))) (sub: (p (Kind.Parser.Oper.sub))) (mul: (p (Kind.Parser.Oper.mul))) (div: (p (Kind.Parser.Oper.div))) (mod: (p (Kind.Parser.Oper.mod))) (and: (p (Kind.Parser.Oper.and))) (or: (p (Kind.Parser.Oper.or))) (xor: (p (Kind.Parser.Oper.xor))) (shl: (p (Kind.Parser.Oper.shl))) (shr: (p (Kind.Parser.Oper.shr))) (ltn: (p (Kind.Parser.Oper.ltn))) (lte: (p (Kind.Parser.Oper.lte))) (eql: (p (Kind.Parser.Oper.eql))) (gte: (p (Kind.Parser.Oper.gte))) (gtn: (p (Kind.Parser.Oper.gtn))) (neq: (p (Kind.Parser.Oper.neq))) : (p x)
Kind.Parser.Oper.match (Kind.Parser.Oper.add) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (add)
Kind.Parser.Oper.match (Kind.Parser.Oper.sub) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (sub)
Kind.Parser.Oper.match (Kind.Parser.Oper.mul) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (mul)
Kind.Parser.Oper.match (Kind.Parser.Oper.div) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (div)
Kind.Parser.Oper.match (Kind.Parser.Oper.mod) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (mod)
Kind.Parser.Oper.match (Kind.Parser.Oper.and) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (and)
Kind.Parser.Oper.match (Kind.Parser.Oper.or) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (or)
Kind.Parser.Oper.match (Kind.Parser.Oper.xor) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (xor)
Kind.Parser.Oper.match (Kind.Parser.Oper.shl) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (shl)
Kind.Parser.Oper.match (Kind.Parser.Oper.shr) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (shr)
Kind.Parser.Oper.match (Kind.Parser.Oper.ltn) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (ltn)
Kind.Parser.Oper.match (Kind.Parser.Oper.lte) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (lte)
Kind.Parser.Oper.match (Kind.Parser.Oper.eql) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (eql)
Kind.Parser.Oper.match (Kind.Parser.Oper.gte) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (gte)
Kind.Parser.Oper.match (Kind.Parser.Oper.gtn) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (gtn)
Kind.Parser.Oper.match (Kind.Parser.Oper.neq) p add sub mul div mod and or xor shl shr ltn lte eql gte gtn neq = (neq)
